{"version":3,"sources":["img.png","Header.js","Conecta.js","Listagem.js","Registro.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","src","img","alt","height","id","Component","Conecta","axios","create","baseURL","Listagem","state","treinos","get","lista","this","setState","data","map","trei","key","nome","treino","width","foto","Registro","aviso","limpar","initialState","handleChange","e","target","name","value","habilitarCamera","a","navigator","mediaDevices","getUserMedia","video","then","mediaStrem","document","getElementById","style","visibility","srcObject","onloadedmetadata","play","catch","err","console","log","message","capturarFoto","canvas","getContext","drawImage","pause","toDataURL","handleSubmit","preventDefault","tempoAviso","formData","FormData","append","config","headers","post","tempo","setTimeout","onSubmit","encType","htmlFor","type","autoFocus","onChange","onClick","to","path","App","Boolean","window","location","hostname","match","ReactDOM","render","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f9aca802.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/img.2b178f23.png\";","import React, { Component } from 'react'\nimport img from './img.png'\n\nexport default class Header extends Component {\n    render() {\n        return(\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col-sm-12 bg-danger text-white py-2\">\n                        <img src={img} alt=\"Academia Vai Adiante\" height=\"100px\" id=\"imagem\" />\n                        <h1 id=\"a\">Academia Bombadão</h1>\n                        <h4 id=\"a\">Registro de Alunos</h4>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import axios from 'axios'\n\nconst Conecta = axios.create({\n    baseURL: 'http://belinglima.000webhostapp.com'\n})\n\nexport default Conecta","import React, { Component } from 'react'\nimport Conecta from './Conecta'\n\nexport default class Listagem extends Component {\n    state = {\n        treinos: []\n    }\n\n    async componentDidMount() {\n        const lista  = await Conecta.get('/json.php')\n        this.setState({treinos: lista.data})\n    }\n\n    render(){\n        return(\n            <div>\n                <div className=\"container\">\n                    <div className=\"col-sm-12\">\n                        <h3>Listagem de Treinos</h3>\n                    </div>\n                    <div className=\"col-sm-12\">\n                    <table className=\"table table-striped\">\n                        <thead>\n                        <tr>\n                            <th>Codigo</th>\n                            <th>Nome</th>\n                            <th>Treino</th>\n                            <th>Foto</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {this.state.treinos.map(trei => (\n                            <tr key={trei.id}>\n                                <td>{trei.id}</td>\n                                <td>{trei.nome}</td>\n                                <td>{trei.treino}</td>\n                                <td><img width=\"100px\" height=\"100px\" src={`https://belinglima.000webhostapp.com/${trei.foto}`} alt=\"foto\" /></td>\n                            </tr>\n                        ))}\n    \n                        </tbody>\n                    </table>\n                    <br /><br /><br /><br />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\nimport Conecta from './Conecta'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n  } from \"react-router-dom\";\nimport Listagem from './Listagem';\n\nexport default class Registro extends Component {\n    state = {\n        nome: '',\n        treino: '',\n        foto: '',\n        aviso: ''\n    }\n\n    componentDidMount() {\n        this.initialState = this.state\n    }\n\n    limpar = () => {\n        this.setState(this.initialState)\n    }\n\n    handleChange = e => {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    habilitarCamera = async () => {\n        // obtem acesso a camera\n        if(navigator.mediaDevices && navigator.mediaDevices.getUserMedia){\n            await navigator.mediaDevices.getUserMedia({ video: true })\n            .then(function (mediaStrem) {\n                var video = document.getElementById('video')\n                video.style.visibility = \"visible\"\n                video.srcObject = mediaStrem;\n                video.onloadedmetadata = function (e) {\n                    video.play();\n                };\n            })\n            .catch(function (err) {\n                console.log(err.name + \" : \" + err.message);\n            });\n        }\n    }\n\n    capturarFoto = () => {\n        var canvas = document.getElementById('canvas')\n        var video = document.getElementById('video')\n\n        var context = canvas.getContext('2d')\n\n        // desenha no canvas a imagem do video\n        context.drawImage(video, 0, 0, 320, 240)\n\n        // pausa e esconde a camera\n        video.pause();\n        video.style.visibility = \"hidden\"\n\n        // muda o state com a imagem\n        this.setState({ foto: canvas.toDataURL(\"image/png\") })\n    }\n\n    handleSubmit = async (e) => {\n        // evita o funcionamento padrao do metodo\n        // ou seja no evento submit, enviar o form\n        e.preventDefault();\n\n        if(this.state.nome === '' || this.state.treino === '' || this.state.foto === '') {\n            this.setState({ aviso: 'Por Favor Preencha nome, treino e Foto' })\n            this.tempoAviso()\n            return\n        }\n\n        const formData = new FormData()\n        formData.append('nome', this.state.nome)\n        formData.append('treino', this.state.treino)\n        formData.append('foto', this.state.foto)\n\n        const config = {\n            headers: {\n                'content-type': 'multipart/form-data'\n            }\n        }\n\n       try{\n        const reg = await Conecta.post('/inc_treino.php', formData, config)\n        this.limpar()\n        this.setState({ aviso: 'Treino cadastrado com sucesso!' })\n        // this.setState({ aviso: `Ok! Treino cadastrado com sucesso - codigo ${reg.data[0].id}` })\n        // console.log(reg);\n       }catch(erro){\n           this.setState({ aviso: `Erro... Treino não inserido: ${erro}` })\n       }\n       this.tempoAviso()\n       var canvas = document.getElementById('canvas')\n       canvas.style.visibility = \"hidden\"\n\n    }\n\n    tempoAviso = (tempo = 3000) => {\n        setTimeout(() => {\n            this.setState({ aviso: '' })\n        }, tempo)\n    }\n\n    render() {\n        return (\n            <Router>\n            <form className=\"mx-4 mt-3\" onSubmit={this.handleSubmit} encType=\"multipart/formData\">\n                <div className=\"row\">\n                    <div className=\"col-sm-6\">\n                        <div className=\"form-group\">\n                            <label htmlFor=\"nome\">Nome do Aluno:</label>\n                            <input type=\"text\" className=\"form-control\" autoFocus\n                                name=\"nome\" id=\"nome\"\n                                onChange={this.handleChange}\n                                value={this.state.nome} />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"treino\">Treino:</label>\n                            <input type=\"text\" className=\"form-control\"\n                                name=\"treino\" id=\"treino\"\n                                onChange={this.handleChange}\n                                value={this.state.treino} />\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-sm-4\">\n                                <input type=\"reset\" className=\"btn btn-success btn-block mt-1\"\n                                onClick={this.habilitarCamera} value=\"Habilitar Camera\" />\n                            </div>\n                            <div className=\"col-sm-4\">\n                                <input type=\"reset\" className=\"btn btn-danger btn-block mt-1\" \n                                value=\"Limpar\" />\n                            </div>\n                            <div className=\"col-sm-4\">\n                                <input type=\"submit\" className=\"btn btn-primary btn-block mt-1\" \n                                    value=\"Gravar\" />\n                            </div>\n                            <div className=\"col-sm-12\">\n                                <Link to=\"/listagem\">Listar Treinos</Link>\n                            </div>\n                        </div>\n                        \n                        {this.state.aviso !== '' ? \n                        <div className=\"alert alert-info mt-4\">\n                            {this.state.aviso}\n                        </div>\n                        : ''\n                    }\n                    </div>\n                    \n                    <div className=\"col-sm-6\">\n                        <video id=\"video\" width=\"310\" height=\"240\"></video>\n                        <canvas id=\"canvas\" width=\"310\" height=\"240\"></canvas>\n                        <input type=\"button\" className=\"btn btn-danger float-right mt-3 px5\" \n                            onClick={this.capturarFoto} value=\"Capturar Foto\" />\n                    </div>\n                </div>\n            </form>\n                <Switch>\n                <Route path=\"/listagem\">\n                    <Listagem />\n                </Route>\n                </Switch>\n            </Router>\n        )\n    }\n}","import React from 'react';\nimport './App.css';\nimport Header from './Header';\nimport Registro from './Registro';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Registro />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}